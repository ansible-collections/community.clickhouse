####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# Test
- name: Create database in check mode
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    state: present
    name: test_db

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ['CREATE DATABASE test_db']

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT name FROM system.databases WHERE name = 'test_db'"

- name: Check the DB is not there
  ansible.builtin.assert:
    that:
    - result.result == []

# Test
- name: Create database in check mode with engine
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    state: present
    name: test_db
    engine: Memory

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ["CREATE DATABASE test_db ENGINE = Memory"]

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT name FROM system.databases WHERE name = 'test_db'"

- name: Check the DB is not there
  ansible.builtin.assert:
    that:
    - result.result == []

# Test
- name: Create database with engine in real mode
  register: result
  community.clickhouse.clickhouse_db:
    name: test_db
    engine: Memory

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ["CREATE DATABASE test_db ENGINE = Memory"]

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT engine FROM system.databases WHERE name = 'test_db'"

- name: Check the DB is there
  ansible.builtin.assert:
    that:
    - result.result == [["Memory"]]

# Test
- name: Create database that already exists
  register: result
  community.clickhouse.clickhouse_db:
    name: test_db
    engine: Memory

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []

# Test
- name: Create database that already exists in check mode
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    name: test_db
    engine: Memory

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []

# Test
- name: Create database that already exists with a different engine in check mode
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    name: test_db
    engine: Atomic

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT engine FROM system.databases WHERE name = 'test_db'"

- name: Check the attributes are the same
  ansible.builtin.assert:
    that:
    - result.result == [["Memory"]]

# Test
- name: Create database that already exists with a different engine in real mode
  register: result
  community.clickhouse.clickhouse_db:
    name: test_db
    engine: Atomic

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT engine FROM system.databases WHERE name = 'test_db'"

- name: Check the attributes are the same
  ansible.builtin.assert:
    that:
    - result.result == [["Memory"]]

# Test
- name: Drop database in check mode
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    name: test_db
    state: absent

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ["DROP DATABASE test_db"]

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT engine FROM system.databases WHERE name = 'test_db'"

- name: Check the DB is there
  ansible.builtin.assert:
    that:
    - result.result == [["Memory"]]

# Test
- name: Drop database
  register: result
  community.clickhouse.clickhouse_db:
    name: test_db
    state: absent

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ["DROP DATABASE test_db"]

- name: Check the actual state
  register: result
  community.clickhouse.clickhouse_client:
    execute: "SELECT engine FROM system.databases WHERE name = 'test_db'"

- name: Check the DB is there
  ansible.builtin.assert:
    that:
    - result.result == []

# Test
- name: Drop non-existing database
  register: result
  community.clickhouse.clickhouse_db:
    name: test_db
    state: absent

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []

# Test
- name: Drop non-existing database in check mode
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    name: test_db
    state: absent

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []

# Test rename database
- name: Create database for renaming
  register: result
  community.clickhouse.clickhouse_db:
    name: test_rename_db

- name: Rename database
  register: result
  community.clickhouse.clickhouse_db:
    name: test_rename_db
    target: dev_db
    state: rename

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ["RENAME DATABASE test_rename_db TO dev_db"]

# Test
- name: Rename database in check mode
  register: result
  check_mode: true
  community.clickhouse.clickhouse_db:
    state: rename
    name: dev_db
    target: test_rename_db

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is changed
    - result.executed_statements == ["RENAME DATABASE dev_db TO test_rename_db"]

# Test rename database if there is nothing to rename
- name: Rename database if there is nothing to rename
  register: result
  community.clickhouse.clickhouse_db:
    name: test_rename_db
    target: dev_db
    state: rename

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is not changed
    - result.executed_statements == []
    - result.warnings != []

# Test rename database if both databases exist
- name: Create database for renaming
  register: result
  community.clickhouse.clickhouse_db:
    name: test_rename_db

- name: Rename database if both databases exist
  register: result
  community.clickhouse.clickhouse_db:
    name: test_rename_db
    target: dev_db
    state: rename
  ignore_errors: true

- name: Check ret values
  ansible.builtin.assert:
    that:
    - result is failed

# Get srv version for the following block
- name: Get server version
  register: server_info
  community.clickhouse.clickhouse_info:
    limit: version

- name: Test comment
  when: server_info['version']['year'] >= 22
  block:

  # Test
  - name: Create database in check mode with comment
    register: result
    check_mode: true
    community.clickhouse.clickhouse_db:
      state: present
      name: test_db
      comment: Test DB

  - name: Check ret values
    ansible.builtin.assert:
      that:
      - result is changed
      - result.executed_statements == ["CREATE DATABASE test_db COMMENT 'Test DB'"]

  # Test
  - name: Create database with comment real mode
    register: result
    community.clickhouse.clickhouse_db:
      state: present
      name: test_db
      comment: Test DB

  - name: Check ret values
    ansible.builtin.assert:
      that:
      - result is changed
      - result.executed_statements == ["CREATE DATABASE test_db COMMENT 'Test DB'"]

  - name: Check the actual state
    register: result
    community.clickhouse.clickhouse_client:
      execute: "SELECT comment FROM system.databases WHERE name = 'test_db'"

  - name: Check the DB is there
    ansible.builtin.assert:
      that:
      - result.result == [['Test DB']]

  # Test
  # The change is not possible. It'll just show a warning and ignore
  - name: Create database with another comment real mode
    register: result
    community.clickhouse.clickhouse_db:
      state: present
      name: test_db
      comment: Test DB 1

  - name: Check ret values
    ansible.builtin.assert:
      that:
      - result is not changed
      - result.executed_statements == []

  - name: Check the actual state
    register: result
    community.clickhouse.clickhouse_client:
      execute: "SELECT comment FROM system.databases WHERE name = 'test_db'"

  - name: Check the DB is there
    ansible.builtin.assert:
      that:
      - result.result == [['Test DB']]

  # Test
  - name: Drop DB with comment
    register: result
    community.clickhouse.clickhouse_db:
      state: absent
      name: test_db
      comment: Test DB

  - name: Check ret values
    ansible.builtin.assert:
      that:
      - result is changed
